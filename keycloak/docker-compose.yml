version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: local-postgres
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - keycloak-network

  keycloak-a:
    image: quay.io/keycloak/keycloak:21.1.1
    restart: always
    container_name: local-keycloak-a
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_db
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_DB_SCHEMA: public
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      KC_LOG_LEVEL: INFO
      KC_PROXY: edge
      PROXY_ADDRESS_FORWARDING: "true"
      KC_HOSTNAME_STRICT: "false"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    command: ["start"]
    networks:
      - keycloak-network

  keycloak-b:
    image: quay.io/keycloak/keycloak:21.1.1
    restart: always
    container_name: local-keycloak-b
    environment:
      KEYCLOAK_ADMIN: admin2
      KEYCLOAK_ADMIN_PASSWORD: admin2
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak_db
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_DB_SCHEMA: public
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      KC_LOG_LEVEL: INFO
      KC_PROXY: edge
      PROXY_ADDRESS_FORWARDING: "true"
      KC_HOSTNAME_STRICT: "false"
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    command: ["start"]
    networks:
      - keycloak-network

  fastapi:
    build: ../backend
    container_name: fastapi-backend
    environment:
      KEYCLOAK_SERVER: "http://keycloak-a:8080/"
      KEYCLOAK_CLIENT_ID: "fastapi-client"
      KEYCLOAK_REALM: "myrealm"
      KEYCLOAK_CLIENT_SECRET: "mysecret"
    ports:
      - "8000:8000"
    depends_on:
      - keycloak-a
      - keycloak-b
    networks:
      - keycloak-network
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  db_data:

networks:
  keycloak-network:
    driver: bridge
